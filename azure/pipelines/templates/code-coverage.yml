parameters:
- name: imageName
  displayName: 'Agent'
  type: string
  default: 'windows-latest'

jobs:
- job: 'code_coverage'
  displayName: 'Code Coverage'
  pool:
    vmImage: ${{ parameters.imageName }}

  variables:
    Solution_File: '$(System.DefaultWorkingDirectory)/source/F0.Analyzers.Core.slnf'
    NuGet_Configuration_File: '$(System.DefaultWorkingDirectory)/nuget.config'
    Tool_Manifest_File: '$(System.DefaultWorkingDirectory)/.config/dotnet-tools.json'
    Test_Results_Directory: '$(System.DefaultWorkingDirectory)/source/TestResults'
    Runsettings_File: '$(System.DefaultWorkingDirectory)/source/test/coverlet.runsettings'
    Coverage_Reports_Glob: '$(System.DefaultWorkingDirectory)/source/TestResults/**/coverage.cobertura.xml'
    Report_Target_Directory: '$(System.DefaultWorkingDirectory)/source/TestResults/coveragereport'
    Report_Types: 'Cobertura'
    Report_Target_File: '$(System.DefaultWorkingDirectory)/source/TestResults/coveragereport/Cobertura.xml'

  steps:
  # Init
  - checkout: self
    displayName: 'Checkout'
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: 'Setup .NET SDK'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  # Restore
  - task: DotNetCoreCLI@2
    displayName: 'Install .NET Tools'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore --configfile $(NuGet_Configuration_File) --tool-manifest $(Tool_Manifest_File) --no-cache'
  - task: DotNetCoreCLI@2
    displayName: 'Restore Dependencies'
    inputs:
      command: 'restore'
      restoreArguments: '$(Solution_File)'
      feedsToUse: 'config'
      nugetConfigPath: '$(NuGet_Configuration_File)'
      verbosityRestore: 'Minimal'
  # Build
  - task: DotNetCoreCLI@2
    displayName: 'Build Projects'
    inputs:
      command: 'build'
      arguments: '$(Solution_File) --no-restore --nologo'
  # Collect
  - task: DotNetCoreCLI@2
    displayName: 'Collect Code Coverage'
    inputs:
      command: 'test'
      arguments: '$(Solution_File) --collect:"XPlat Code Coverage" --no-build --nologo --results-directory $(Test_Results_Directory) --settings $(Runsettings_File)'
      publishTestResults: false
  # Generate
  - task: DotNetCoreCLI@2
    displayName: 'Generate Report'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'run reportgenerator -reports:$(Coverage_Reports_Glob) -targetdir:$(Report_Target_Directory) -reporttypes:$(Report_Types)'
  # Report
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Results'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Report_Target_File)'
      failIfCoverageEmpty: true
