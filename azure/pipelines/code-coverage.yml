name: 'Code Coverage'

trigger:
  branches:
    include:
    - master
pr:
  branches:
    include:
    - master

variables:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
- job: 'code_coverage'
  strategy:
    matrix:
      ubuntu:
        imageName: 'ubuntu-latest'
  pool:
    vmImage: $(imageName)

  variables:
    NuGet_Configuration_File: './source/nuget.config'
    Solution_File: './source/F0.Analyzers.sln'
    Test_Results_Directory: './source/TestResults'
    Runsettings_File: './source/test/coverlet.runsettings'
    Coverage_Reports_Glob: './source/TestResults/**/coverage.cobertura.xml'
    Report_Target_Directory: './source/TestResults/coveragereport'
    Report_Types: 'Cobertura'
    Report_Target_File: './source/TestResults/coveragereport/Cobertura.xml'

  steps:
  # Init
  - checkout: self
    displayName: 'Checkout'
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: 'Setup .NET Core SDK'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  # Restore
  - script: dotnet tool restore --configfile $(NuGet_Configuration_File)
    displayName: 'Install .NET Tools'
  # Collect
  - script: dotnet test $(Solution_File) --collect:"XPlat Code Coverage" --results-directory $(Test_Results_Directory) --settings $(Runsettings_File)
    displayName: 'Collect Code Coverage'
  # Generate
  - script: dotnet tool run reportgenerator "-reports:$(Coverage_Reports_Glob)" "-targetdir:$(Report_Target_Directory)" -reporttypes:$(Report_Types)
    displayName: 'Generate Report'
  # Report
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Results'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Report_Target_File)'
      failIfCoverageEmpty: true
